<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiming.mapper.IdcardMapper">
  <resultMap id="BaseResultMap" type="com.yiming.entity.Idcard">
    <id column="i_id" jdbcType="INTEGER" property="iId" />
    <result column="i_cardno" jdbcType="VARCHAR" property="iCardno" />
    <result column="i_uselife" jdbcType="DATE" property="iUselife" />
    <result column="i_person2_id" jdbcType="INTEGER" property="iPerson2Id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    i_id, i_cardno, i_uselife, i_person2_id
  </sql>
  <select id="selectByExample" parameterType="com.yiming.entity.IdcardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from idcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from idcard
    where i_id = #{iId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from idcard
    where i_id = #{iId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yiming.entity.IdcardExample">
    delete from idcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yiming.entity.Idcard">
    insert into idcard (i_id, i_cardno, i_uselife, 
      i_person2_id)
    values (#{iId,jdbcType=INTEGER}, #{iCardno,jdbcType=VARCHAR}, #{iUselife,jdbcType=DATE}, 
      #{iPerson2Id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yiming.entity.Idcard">
    insert into idcard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="iId != null">
        i_id,
      </if>
      <if test="iCardno != null">
        i_cardno,
      </if>
      <if test="iUselife != null">
        i_uselife,
      </if>
      <if test="iPerson2Id != null">
        i_person2_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="iId != null">
        #{iId,jdbcType=INTEGER},
      </if>
      <if test="iCardno != null">
        #{iCardno,jdbcType=VARCHAR},
      </if>
      <if test="iUselife != null">
        #{iUselife,jdbcType=DATE},
      </if>
      <if test="iPerson2Id != null">
        #{iPerson2Id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yiming.entity.IdcardExample" resultType="java.lang.Long">
    select count(*) from idcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update idcard
    <set>
      <if test="record.iId != null">
        i_id = #{record.iId,jdbcType=INTEGER},
      </if>
      <if test="record.iCardno != null">
        i_cardno = #{record.iCardno,jdbcType=VARCHAR},
      </if>
      <if test="record.iUselife != null">
        i_uselife = #{record.iUselife,jdbcType=DATE},
      </if>
      <if test="record.iPerson2Id != null">
        i_person2_id = #{record.iPerson2Id,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update idcard
    set i_id = #{record.iId,jdbcType=INTEGER},
      i_cardno = #{record.iCardno,jdbcType=VARCHAR},
      i_uselife = #{record.iUselife,jdbcType=DATE},
      i_person2_id = #{record.iPerson2Id,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yiming.entity.Idcard">
    update idcard
    <set>
      <if test="iCardno != null">
        i_cardno = #{iCardno,jdbcType=VARCHAR},
      </if>
      <if test="iUselife != null">
        i_uselife = #{iUselife,jdbcType=DATE},
      </if>
      <if test="iPerson2Id != null">
        i_person2_id = #{iPerson2Id,jdbcType=INTEGER},
      </if>
    </set>
    where i_id = #{iId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yiming.entity.Idcard">
    update idcard
    set i_cardno = #{iCardno,jdbcType=VARCHAR},
      i_uselife = #{iUselife,jdbcType=DATE},
      i_person2_id = #{iPerson2Id,jdbcType=INTEGER}
    where i_id = #{iId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.yiming.entity.Idcard">
    <id column="i_id" jdbcType="INTEGER" property="iId" />
    <result column="i_cardno" jdbcType="VARCHAR" property="iCardno" />
    <result column="i_uselife" jdbcType="DATE" property="iUselife" />
    <result column="i_person2_id" jdbcType="INTEGER" property="iPerson2Id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    i_id, i_cardno, i_uselife, i_person2_id
  </sql>
  <select id="selectByExample" parameterType="com.yiming.entity.IdcardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from idcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from idcard
    where i_id = #{iId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from idcard
    where i_id = #{iId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yiming.entity.IdcardExample">
    delete from idcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yiming.entity.Idcard">
    insert into idcard (i_id, i_cardno, i_uselife, 
      i_person2_id)
    values (#{iId,jdbcType=INTEGER}, #{iCardno,jdbcType=VARCHAR}, #{iUselife,jdbcType=DATE}, 
      #{iPerson2Id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yiming.entity.Idcard">
    insert into idcard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="iId != null">
        i_id,
      </if>
      <if test="iCardno != null">
        i_cardno,
      </if>
      <if test="iUselife != null">
        i_uselife,
      </if>
      <if test="iPerson2Id != null">
        i_person2_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="iId != null">
        #{iId,jdbcType=INTEGER},
      </if>
      <if test="iCardno != null">
        #{iCardno,jdbcType=VARCHAR},
      </if>
      <if test="iUselife != null">
        #{iUselife,jdbcType=DATE},
      </if>
      <if test="iPerson2Id != null">
        #{iPerson2Id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yiming.entity.IdcardExample" resultType="java.lang.Long">
    select count(*) from idcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update idcard
    <set>
      <if test="record.iId != null">
        i_id = #{record.iId,jdbcType=INTEGER},
      </if>
      <if test="record.iCardno != null">
        i_cardno = #{record.iCardno,jdbcType=VARCHAR},
      </if>
      <if test="record.iUselife != null">
        i_uselife = #{record.iUselife,jdbcType=DATE},
      </if>
      <if test="record.iPerson2Id != null">
        i_person2_id = #{record.iPerson2Id,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update idcard
    set i_id = #{record.iId,jdbcType=INTEGER},
      i_cardno = #{record.iCardno,jdbcType=VARCHAR},
      i_uselife = #{record.iUselife,jdbcType=DATE},
      i_person2_id = #{record.iPerson2Id,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yiming.entity.Idcard">
    update idcard
    <set>
      <if test="iCardno != null">
        i_cardno = #{iCardno,jdbcType=VARCHAR},
      </if>
      <if test="iUselife != null">
        i_uselife = #{iUselife,jdbcType=DATE},
      </if>
      <if test="iPerson2Id != null">
        i_person2_id = #{iPerson2Id,jdbcType=INTEGER},
      </if>
    </set>
    where i_id = #{iId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yiming.entity.Idcard">
    update idcard
    set i_cardno = #{iCardno,jdbcType=VARCHAR},
      i_uselife = #{iUselife,jdbcType=DATE},
      i_person2_id = #{iPerson2Id,jdbcType=INTEGER}
    where i_id = #{iId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.yiming.entity.Idcard">
    <id column="i_id" jdbcType="INTEGER" property="iId" />
    <result column="i_cardno" jdbcType="VARCHAR" property="iCardno" />
    <result column="i_uselife" jdbcType="DATE" property="iUselife" />
    <result column="i_person2_id" jdbcType="INTEGER" property="iPerson2Id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    i_id, i_cardno, i_uselife, i_person2_id
  </sql>
  <select id="selectByExample" parameterType="com.yiming.entity.IdcardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from idcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from idcard
    where i_id = #{iId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from idcard
    where i_id = #{iId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yiming.entity.IdcardExample">
    delete from idcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yiming.entity.Idcard">
    insert into idcard (i_id, i_cardno, i_uselife, 
      i_person2_id)
    values (#{iId,jdbcType=INTEGER}, #{iCardno,jdbcType=VARCHAR}, #{iUselife,jdbcType=DATE}, 
      #{iPerson2Id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yiming.entity.Idcard">
    insert into idcard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="iId != null">
        i_id,
      </if>
      <if test="iCardno != null">
        i_cardno,
      </if>
      <if test="iUselife != null">
        i_uselife,
      </if>
      <if test="iPerson2Id != null">
        i_person2_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="iId != null">
        #{iId,jdbcType=INTEGER},
      </if>
      <if test="iCardno != null">
        #{iCardno,jdbcType=VARCHAR},
      </if>
      <if test="iUselife != null">
        #{iUselife,jdbcType=DATE},
      </if>
      <if test="iPerson2Id != null">
        #{iPerson2Id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yiming.entity.IdcardExample" resultType="java.lang.Long">
    select count(*) from idcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update idcard
    <set>
      <if test="record.iId != null">
        i_id = #{record.iId,jdbcType=INTEGER},
      </if>
      <if test="record.iCardno != null">
        i_cardno = #{record.iCardno,jdbcType=VARCHAR},
      </if>
      <if test="record.iUselife != null">
        i_uselife = #{record.iUselife,jdbcType=DATE},
      </if>
      <if test="record.iPerson2Id != null">
        i_person2_id = #{record.iPerson2Id,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update idcard
    set i_id = #{record.iId,jdbcType=INTEGER},
      i_cardno = #{record.iCardno,jdbcType=VARCHAR},
      i_uselife = #{record.iUselife,jdbcType=DATE},
      i_person2_id = #{record.iPerson2Id,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yiming.entity.Idcard">
    update idcard
    <set>
      <if test="iCardno != null">
        i_cardno = #{iCardno,jdbcType=VARCHAR},
      </if>
      <if test="iUselife != null">
        i_uselife = #{iUselife,jdbcType=DATE},
      </if>
      <if test="iPerson2Id != null">
        i_person2_id = #{iPerson2Id,jdbcType=INTEGER},
      </if>
    </set>
    where i_id = #{iId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yiming.entity.Idcard">
    update idcard
    set i_cardno = #{iCardno,jdbcType=VARCHAR},
      i_uselife = #{iUselife,jdbcType=DATE},
      i_person2_id = #{iPerson2Id,jdbcType=INTEGER}
    where i_id = #{iId,jdbcType=INTEGER}
  </update>
</mapper>