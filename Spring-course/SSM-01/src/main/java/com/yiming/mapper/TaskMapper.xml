<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiming.mapper.TaskMapper">
  <resultMap id="BaseResultMap" type="com.yiming.entity.Task">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="starttime" jdbcType="DATE" property="starttime" />
    <result column="endtime" jdbcType="DATE" property="endtime" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="define" jdbcType="VARCHAR" property="define" />
    <result column="fun_fk" jdbcType="INTEGER" property="funFk" />
    <result column="emp_fk2" jdbcType="INTEGER" property="empFk2" />
    <result column="emp_fk" jdbcType="INTEGER" property="empFk" />
    <result column="tasktitle" jdbcType="VARCHAR" property="tasktitle" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, starttime, endtime, level, define, fun_fk, emp_fk2, emp_fk, tasktitle, remark, 
    status
  </sql>
  <select id="selectByExample" parameterType="com.yiming.entity.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yiming.entity.TaskExample">
    delete from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yiming.entity.Task">
    insert into task (id, starttime, endtime, 
      level, define, fun_fk, 
      emp_fk2, emp_fk, tasktitle, 
      remark, status)
    values (#{id,jdbcType=INTEGER}, #{starttime,jdbcType=DATE}, #{endtime,jdbcType=DATE}, 
      #{level,jdbcType=VARCHAR}, #{define,jdbcType=VARCHAR}, #{funFk,jdbcType=INTEGER}, 
      #{empFk2,jdbcType=INTEGER}, #{empFk,jdbcType=INTEGER}, #{tasktitle,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yiming.entity.Task">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="starttime != null">
        starttime,
      </if>
      <if test="endtime != null">
        endtime,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="define != null">
        define,
      </if>
      <if test="funFk != null">
        fun_fk,
      </if>
      <if test="empFk2 != null">
        emp_fk2,
      </if>
      <if test="empFk != null">
        emp_fk,
      </if>
      <if test="tasktitle != null">
        tasktitle,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=DATE},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=DATE},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="define != null">
        #{define,jdbcType=VARCHAR},
      </if>
      <if test="funFk != null">
        #{funFk,jdbcType=INTEGER},
      </if>
      <if test="empFk2 != null">
        #{empFk2,jdbcType=INTEGER},
      </if>
      <if test="empFk != null">
        #{empFk,jdbcType=INTEGER},
      </if>
      <if test="tasktitle != null">
        #{tasktitle,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yiming.entity.TaskExample" resultType="java.lang.Long">
    select count(*) from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null">
        starttime = #{record.starttime,jdbcType=DATE},
      </if>
      <if test="record.endtime != null">
        endtime = #{record.endtime,jdbcType=DATE},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.define != null">
        define = #{record.define,jdbcType=VARCHAR},
      </if>
      <if test="record.funFk != null">
        fun_fk = #{record.funFk,jdbcType=INTEGER},
      </if>
      <if test="record.empFk2 != null">
        emp_fk2 = #{record.empFk2,jdbcType=INTEGER},
      </if>
      <if test="record.empFk != null">
        emp_fk = #{record.empFk,jdbcType=INTEGER},
      </if>
      <if test="record.tasktitle != null">
        tasktitle = #{record.tasktitle,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task
    set id = #{record.id,jdbcType=INTEGER},
      starttime = #{record.starttime,jdbcType=DATE},
      endtime = #{record.endtime,jdbcType=DATE},
      level = #{record.level,jdbcType=VARCHAR},
      define = #{record.define,jdbcType=VARCHAR},
      fun_fk = #{record.funFk,jdbcType=INTEGER},
      emp_fk2 = #{record.empFk2,jdbcType=INTEGER},
      emp_fk = #{record.empFk,jdbcType=INTEGER},
      tasktitle = #{record.tasktitle,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yiming.entity.Task">
    update task
    <set>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=DATE},
      </if>
      <if test="endtime != null">
        endtime = #{endtime,jdbcType=DATE},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="define != null">
        define = #{define,jdbcType=VARCHAR},
      </if>
      <if test="funFk != null">
        fun_fk = #{funFk,jdbcType=INTEGER},
      </if>
      <if test="empFk2 != null">
        emp_fk2 = #{empFk2,jdbcType=INTEGER},
      </if>
      <if test="empFk != null">
        emp_fk = #{empFk,jdbcType=INTEGER},
      </if>
      <if test="tasktitle != null">
        tasktitle = #{tasktitle,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yiming.entity.Task">
    update task
    set starttime = #{starttime,jdbcType=DATE},
      endtime = #{endtime,jdbcType=DATE},
      level = #{level,jdbcType=VARCHAR},
      define = #{define,jdbcType=VARCHAR},
      fun_fk = #{funFk,jdbcType=INTEGER},
      emp_fk2 = #{empFk2,jdbcType=INTEGER},
      emp_fk = #{empFk,jdbcType=INTEGER},
      tasktitle = #{tasktitle,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>